req(input$file1)
df <- read.png(input$file1$datapath,
header = input$header,
sep = input$sep,
quote = input$quote)
if(input$disp == "head") {
return(head(df))
}
else {
return(df)
}
})
}
# Create Shiny app ----
shinyApp(ui, server)
library(shiny)
library(shinyFiles)
library(base64enc)
# Define UI for data upload app ----
ui <- fluidPage(
# App title ----
titlePanel("Uploading Images"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Select a file ----
shinyDirButton("dir", "Choose Directory",
title = "Select a directory",
buttonType = "default",
class = NULL),
# Horizontal line ----
checkboxInput("header", "Header", TRUE),
# Input: Checkbox if file has header ----
checkboxInput("header", "Header", TRUE),
# Input: Select separator ----
radioButtons("sep", "Separator",
choices = c(Comma = ",",
Semicolon = ";",
Tab = "\t"),
selected = ","),
# Input: Select quotes ----
radioButtons("quote", "Quote",
choices = c(None = "",
"Double Quote" = '"',
"Single Quote" = "'"),
selected = '"'),
# Horizontal line ----
tags$hr(),
# Input: Select number of rows to display ----
radioButtons("disp", "Display",
choices = c(Head = "head",
All = "all"),
selected = "head")
# Input: Checkbox if file has header ----
checkboxInput("header", "Header", TRUE),
library(shiny)
library(shinyFiles)
library(base64enc)
# Define UI for data upload app ----
ui <- fluidPage(
# App title ----
titlePanel("Uploading Images"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Select a file ----
shinyDirButton("dir", "Choose Directory",
title = "Select a directory",
buttonType = "default",
class = NULL),
# Horizontal line ----
checkboxInput("header", "Header", TRUE),
# Input: Checkbox if file has header ----
checkboxInput("header", "Header", TRUE),
# Input: Select separator ----
radioButtons("sep", "Separator",
choices = c(Comma = ",",
Semicolon = ";",
Tab = "\t"),
selected = ","),
# Input: Select quotes ----
radioButtons("quote", "Quote",
choices = c(None = "",
"Double Quote" = '"',
"Single Quote" = "'"),
selected = '"'),
# Horizontal line ----
tags$hr(),
# Input: Select number of rows to display ----
radioButtons("disp", "Display",
choices = c(Head = "head",
All = "all"),
selected = "head")
# Input: Checkbox if file has header ----
checkboxInput("header", "Header", TRUE),
library(shiny)
library(shinyFiles)
library(base64enc)
# Define UI for data upload app ----
ui <- fluidPage(
# App title ----
titlePanel("Uploading Images"),
# Sidebar layout with input and output definitions ----
sidebarLayout(
# Sidebar panel for inputs ----
sidebarPanel(
# Input: Select a file ----
fileInput("file1", "Choose CSV File",
multiple = TRUE,
accept = c("text/csv",
"text/comma-separated-values,text/plain",
".csv")),
# Horizontal line ----
tags$hr(),
# Input: Checkbox if file has header ----
checkboxInput("header", "Header", TRUE),
# Input: Select separator ----
radioButtons("sep", "Separator",
choices = c(Comma = ",",
Semicolon = ";",
Tab = "\t"),
selected = ","),
# Input: Select quotes ----
radioButtons("quote", "Quote",
choices = c(None = "",
"Double Quote" = '"',
"Single Quote" = "'"),
selected = '"'),
# Horizontal line ----
tags$hr(),
# Input: Select number of rows to display ----
radioButtons("disp", "Display",
choices = c(Head = "head",
All = "all"),
selected = "head")
),
# Main panel for displaying outputs ----
mainPanel(
# Output: Data file ----
tableOutput("contents")
)
)
)
# Define server logic to read selected file ----
server <- function(input, output) {
output$contents <- renderTable({
# input$file1 will be NULL initially. After the user selects
# and uploads a file, head of that data file by default,
# or all rows if selected, will be shown.
req(input$file1)
df <- read.png(input$file1$datapath,
header = input$header,
sep = input$sep,
quote = input$quote)
if(input$disp == "head") {
return(head(df))
}
else {
return(df)
}
})
}
# Create Shiny app ----
shinyApp(ui, server)
runApp('C:/Users/shanm/Downloads/shiny_demo/app1')
runApp('C:/Users/shanm/Downloads/shiny_demo/app1')
runApp('C:/Users/shanm/Downloads/shiny_demo/app1')
runApp('C:/Users/shanm/Downloads/shiny_demo/app1')
runApp('C:/Users/shanm/Downloads/shiny_demo/app1')
runApp('C:/Users/shanm/Downloads/shiny_demo/app1')
runApp('C:/Users/shanm/Downloads/shiny_demo/app1')
runApp('C:/Users/shanm/Downloads/shiny_demo/app1')
knitr::include_graphics("C:/Users/shanm/Desktop/adjustment.jpg")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/adjustment.jpg")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/adjustment.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/adjustment.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/adjustment.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/adjustment.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/adjustments.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/adjustments.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/change1")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/change1.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/changes2.png")
install.packages("shiny")
library(shiny)
runExample("01_hello")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/adjustments.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/changes1.png")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/changes2.png")
tinytex::reinstall_tinytex(repository = "illinois")
knitr::include_graphics("C:/Users/shanm/Desktop/codingpics/changes2.png")
install.packages("owidR")
library(owidR)
library(owidR)
library(owidR)
library(owidR)
install.packages(owidR)
library(owidR)
library(owidR)
library(owidR)
library(owidR)
library("owidR")
owidR
owidR(mental_health)
owidR(child_mortality)
install.packages("owidR")
owidR(child_mortality)
install.packages("owidR")
install.packages("owidR")
owidR(child_mortality)
owidR(child_mortality)
owidR
owidR
library(owidR)
library(owidR)
library(owidR)
shiny::runApp('personal_app')
runApp('personal_app')
runApp('personal_app')
runApp('personal_app')
runApp('personal_app')
install.packages(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
shiny::runApp('personal_app')
runApp('personal_app')
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line()
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line()  +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_edited1 <- ges_clean %>% mutate(employment_rate=as.numerical(employment_rate_overall))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_edited1 <- ges_clean %>% mutate(employment_rate=as.numeric(employment_rate_overall))
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line()  +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line()  +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line()  +
scale_y_continuous(breaks = seq(60, 100, by = 10), limits = c(60, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line()  +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(40, 100, by = 10), limits = c(40, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(40, 100, by = 10), limits = c(0, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(0, 100, by = 10), limits = c(0, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(60, 100, by = 10), limits = c(60, 100))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(60, 100, by = 10), limits = c(60, 100)) +
scale_x_continuous( trans= 1)
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(60, 100, by = 10), limits = c(60, 100)) +
scale_x_continuous(breaks= seq(2013, 2021, by=1)
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(60, 100, by = 10), limits = c(60, 100)) +
scale_x_continuous(breaks= seq(2013, 2021, by=1))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(60, 100, by = 10), limits = c(60, 100)) +
scale_x_continuous(breaks= seq(2013, 2021, by=1))
library(shiny)
library(tidyverse)
library(ggplot2)
ges <- read.csv("GraduateEmploymentSurvey.csv")
ges_clean <- na.omit(ges)
ges_clean2 <- ges_clean$employment_rate_overall <- as.numeric(ges_clean$employment_rate_overall)
ggplot(ges_clean) +
aes(x=year,y=employment_rate_overall, group=university) +
geom_point() +
geom_line() +
scale_y_continuous(breaks = seq(60, 100, by = 10), limits = c(60, 100)) +
scale_x_continuous(breaks= seq(2013, 2021, by=1))
knitr::opts_chunk$set(echo = TRUE)
data= matrix(c(7,"Visualising numeric variables and its customisations", 8,"Plotting a line graph and tidying data", 9 ,"User interface: Output - filter according to categories", "na", "Plotting more detailed line graphs with shiny", "na","Filtering na data"),ncol=2, byrow=TRUE)
# specify the column names and row names of matrix
colnames(data) <- c("Week","Topics")
rownames(data) <- c("1",'2','3','4','5')
# assign to table
final=as.table(data)
# display
final
data= matrix(c(4,"Manipulating data",7,"Visualising numeric variables and its customisations", 8,"Plotting a line graph and tidying data", 9 ,"User interface: Output - filter according to categories", "na", "Plotting more detailed line graphs with shiny", "na","Filtering na data"),ncol=2, byrow=TRUE)
# specify the column names and row names of matrix
colnames(data) <- c("Week","Topics")
rownames(data) <- c("1",'2','3','4','5','6')
# assign to table
final=as.table(data)
# display
final
library(shiny)
runExample(06_tabsets)
runExample("06_tabsets")
runExample("07_widgets")
runApp('test.R')
runApp('test.R')
runApp('test.R')
runApp('personal_app')
runApp('personal_app')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runExample("06_tabsets")
runExample("07_widgets")
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runExample("07_widgets")
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
?pageWithSidebar
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('personal_app')
runApp('personal_app')
shiny::runApp('personal_app')
runApp('personal_app')
runApp('personal_app')
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
shiny::runApp('personal_app')
install.packages("shiny")
shiny::runApp('personal_app')
install.packages("shiny")
shiny::runApp('personal_app')
runApp('personal_app')
shiny::runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
runApp('C:/Users/shanm/Desktop/School/Module Stuff/Year 2 Sem 2/NM2207/testcode/test')
shiny::runApp('personal_app')
library(shiny)
install.packages("shiny")
library(shiny)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
library(shiny)
runExample(06_tabsets)
runExample("06_tabsets")
runExample("07_widgets")
runExample("05_sliders")
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
runExample("06_tabsets")
runExample("06_tabsets")
